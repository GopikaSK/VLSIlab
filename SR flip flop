module srff( sr, reset, clk,q, qbar );
input [0:1]sr ;
input reset, clk ;
output q, qbar ;
reg q, qbar ;
always @( sr , reset, posedge clk )
begin
if ( reset == 0 )
begin
q = 1'b0;
qbar=1'b1;
end
else
begin
case(sr)
2'b00:begin q=q;qbar=qbar;end
2'b01:begin q=1'b0;qbar=1'b1;end
2'b10:begin q=1'b1;qbar=1'b0;end
2'b11:begin q=1'bz;qbar=1'bz;end
endcase
end
end
endmodule

Test Bench:
module srff_test;
reg [0:1] sr;reg reset; reg clk;
wire q; wire qbar;
srff uut (.sr(sr), .reset(reset), .clk(clk),
.q(q), .qbar(qbar) );
initial
clk =1'b0;
always #10 clk=~clk;
initial begin
reset=0; #100;
reset=1;
sr = 00;#100;
sr = 01;#100;
sr = 10;#100;
sr = 11;#100;
end
endmodule

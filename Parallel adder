module parallel ( a, b, cin, sum, cout );
input [3:0] a, b ;
input cin ;
output [3:0] sum;
output cout;
wire [3:0] c;
fa stage0 ( a[0], b[0], cin, sum[0], c[0] ) ;
fa stage1 ( a[1], b[1], c[0], sum[1], c[1] ) ;
fa stage2 ( a[2], b[2], c[1], sum[2], c[2] ) ;
fa stage3 ( a[3], b[3], c[2], sum[3], c[3] ) ;
assign cout = c[3] ;
endmodule

Component Code
module fa( a, b, cin, s, cout ) ;
input a, b, cin;
output s, cout;
assign s = a ^ b ^ cin ;
assign cout = ( a & b ) | ( b & cin ) | ( cin & a ) ;
endmodule

Test Bench:
module parallel_test;
reg [3:0] a;reg [3:0] b;reg cin;
wire [3:0] sum;wire cout;
parallel uut (
.a(a),.b(b),.cin(cin),
.sum(sum),.cout(cout)
);
initial begin
a = 0101;b = 1101; cin=0;#100;
a = 0111;b = 1001; cin=0;#100;
a = 1011;b = 0001; cin=0;#100;
a = 0001;b = 1100; cin=0;#100;
end
endmodule
